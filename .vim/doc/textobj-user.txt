*textobj-user.txt*	Support for user-defined text objects

Version 0.1
Copyright (C) 2007 kana <http://nicht.s8.xrea.com/>
License: MIT license (see <http://www.opensource.org/licenses/mit-license>)
$Id: /local/svn-repos/config/trunk/vim/dot.vim/doc/textobj-user.txt 945 2007-11-21T05:17:38.248652Z kana  $




==============================================================================
INTRODUCTION					*textobj-user-introduction*

textobj-user is a Vim plugin to SUPPORT user-defined text objects which can be
defined by regular expression.

Note that this plugin only provides support functions, does not provides any
useful text objects.




==============================================================================
FUNCTIONS					*textobj-user-function*

						*textobj#user#move()*
textobj#user#move({pattern}, {flags})
	Move the cursor to the appropriate object defined by {pattern}.

	{flags} is a string, which can contain the following character flags:
		char	meaning ~
		----	------- ~
		'b'     search backward instead of forward.
		'e'     move to the end of the match.

	Return value is same as |searchpos()|.

						*textobj#user#select()*
textobj#user#select({pattern}, {flags}, {prevous-mode})
	Select the appropriate object defined by {pattern}.
	If the cursor is already in the range of an object, select it.
	If the cursor is not in the range of an object, select the nearest
	object after the cursor.

	{flags} is a string, which can contain the following character flags:
		char	meaning ~
		----	------- ~
		'b'     select the nearest object BEFORE the cursor if the
		        cursor is not in the range of an object.

	{previous-mode} is a string that represents the "previous" mode.
	For example, if this function is called via a mapping for
	Operator-pending mode, {previous-mode} must be 'o'.
		char	meaning ~
		----	------- ~
		'o'     Operator-pending mode
		'v'     Visual mode

	Return value is not defined.

						*textobj#user#select_pair()*
textobj#user#select_pair({pattern1}, {pattern2}, {flags}, {previous-mode})
	Select the appropriate object which starts with {pattern1} and ends
	with {pattern2}.

	{flags} is a string, which can contain the following character flags:
		char	meaning ~
		----	------- ~
		'a'     select the range including {pattern1} and {pattern2},
			like |at|.
		'i'     select the range excluding {pattern1} and {pattern2},
			like |it|.  This is the default behavior unless 'a' is
			explicitly specified.  If there is not text between
			{pattern1} and {pattern2}, this function does nothing.

	For the detail of {previous-mode}, see |textobj#user#select()|.

	Return value is not defined.

						*textobj#user#define()*
textobj#user#define({pattern}, {pattern1}, {pattern2}, {guideline})
	Support function to define key mappings for the text object defined by
	{pattern}, or {pattern1} and {pattern2}.  {guideline} is a dictionary
	consists of key-value pairs where key is a string to represent the
	name of function and value is a list of strings (each string
	represents {lhs} for corresponding key).

	function name		meaning ~
	-------------		------- ~
	'move-to-next'		textobj#user#move({pattern}, '')
	'move-to-prev'		textobj#user#move({pattern}, 'b')
	'move-to-next-end'	textobj#user#move({pattern}, 'e')
	'move-to-prev-end'	textobj#user#move({pattern}, 'be')
	'select'		synonym for 'select-next'
	'select-next'		textobj#user#select({pattern}, '',
				                    {previous-mode})
	'select-prev'		textobj#user#select({pattern}, 'b',
				                    {previous-mode})
	'select-pair-all'	textobj#user#select_pair({pattern1},
				                         {pattern2},
				                         'a', {previous-mode})
	'select-pair-inner'	textobj#user#select_pair({pattern1},
				                         {pattern2},
				                         'i', {previous-mode})

	Example: >
		call textobj#user#define('foo', '', '',
		                 \ {'move-to-next': 'gj',
		                 \  'move-to-prev': 'gk',
		                 \  'select': ['ig', 'ag']})
<



==============================================================================
BUGS						*textobj-user-bugs*

- textobj#user#select() and textobj#user#select_pair() override the current
  {Visual}, unlike built-in text objects such as iw/aw, is/as, and so forth.

- textobj#user#select() and textobj#user#select_pair() cannot be used with
  [count].




==============================================================================
CHANGELOG					*textobj-user-changelog*

0.1	2007-11-16T01:17:45+09:00
	- Modify to be autoloaded.
	- Change the names of all API.

0.0	2007-10-15T20:41:34+09:00
	- First release.




==============================================================================
vim:tw=78:ts=8:ft=help:norl:
